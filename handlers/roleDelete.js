const { AuditLogEvent, PermissionsBitField } = require('discord.js');
const { db, antiCrashHandler, removeRoles, checkBot, quarantine, dm } = require('../utils.js');

module.exports = async (client) => {
  client.on('roleDelete', async (role) => {
    try {
      console.log(`üö® –£–¥–∞–ª–µ–Ω–∞ —Ä–æ–ª—å: ${role?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (${role?.id || '???'})`);

      const guild = role.guild;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –±–æ—Ç–∞ –Ω—É–∂–Ω—ã–µ –ø—Ä–∞–≤–∞
      if (!guild.members.me.permissions.has(PermissionsBitField.Flags.ViewAuditLog)) {
        console.error("‚ùå –û—à–∏–±–∫–∞: —É –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∞—É–¥–∏—Ç–∞.");
        return;
      }

      console.log(`üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –∞—É–¥–∏—Ç–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞: ${guild.name} (${guild.id})`);

      // –ñ–¥–µ–º, –ø–æ–∫–∞ Discord API –æ—Ç–¥–∞—Å—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      await new Promise((resolve) => setTimeout(resolve, 1000));

      // –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏ –∞—É–¥–∏—Ç–∞
      const fetchedLogs = await guild.fetchAuditLogs({ limit: 1, type: AuditLogEvent.RoleDelete }).catch(err => {
        console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤ –∞—É–¥–∏—Ç–∞ (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è):`, err);
        return null;
    });

      if (!fetchedLogs) {
        console.log("‚ùå –õ–æ–≥–∏ –∞—É–¥–∏—Ç–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã.");
        return;
      }

      const deletionLog = fetchedLogs.entries.first();
      if (!deletionLog) {
        console.log("‚ùå –í –ª–æ–≥–∞—Ö –∞—É–¥–∏—Ç–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏.");
        return;
      }

      const { executor } = deletionLog;
      if (!executor || executor.id === client.user.id) return;

      console.log(`üëÄ –†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: ${executor.tag} (${executor.id})`);

      const action = "–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏";

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–π—Ç–ª–∏—Å—Ç–∞
      const whitelistColl = db.collection('whitelist');
      const whitelistDoc = await whitelistColl.findOne({ _id: guild.id }) || { whitelist: [] };

      if (whitelistDoc.whitelist.includes(executor.id)) {
        console.log(`‚úÖ ${executor.tag} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–∞–π—Ç–ª–∏—Å—Ç–µ.`);
        return;
      }

      const member = await guild.members.fetch(executor.id).catch(() => null);
      if (!member) {
        console.error(`‚ùå –û—à–∏–±–∫–∞: ${executor.tag} (${executor.id}) –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–µ—Ä–≤–µ—Ä–µ.`);
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω—Ç–∏–∫—Ä–∞—à–∞
      if (!(await antiCrashHandler(member, "role_anti_crash", action))) {
      }

      // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏
      const newRole = await guild.roles.create({
        name: role.name,
        color: role.color,
        hoist: role.hoist,
        permissions: new PermissionsBitField(role.permissions).bitfield,
        mentionable: role.mentionable,
        reason: "–ê–≤—Ç–æ-–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–π —Ä–æ–ª–∏",
      });

      console.log(`‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ä–æ–ª—å: ${newRole.name} (${newRole.id})`);

      // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π
      await newRole.setPosition(role.position).catch(() => {});

      // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —ç—Ç–æ–π —Ä–æ–ª—å—é
      const backupColl = db.collection('role_backups');
      const roleBackup = await backupColl.findOne({ roleId: role.id });

      if (roleBackup) {
        for (const userId of roleBackup.users) {
          const user = await guild.members.fetch(userId).catch(() => null);
          if (user) {
            await user.roles.add(newRole).catch(() => {});
          }
        }
      }

      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã (–∑–∞–º–µ–Ω–∞ —Å—Ç–∞—Ä–æ–≥–æ ID —Ä–æ–ª–∏ –Ω–∞ –Ω–æ–≤—ã–π)
      await backupColl.updateOne({ roleId: role.id }, { $set: { roleId: newRole.id } });

      // –ù–∞–∫–∞–∑–∞–Ω–∏–µ —É–¥–∞–ª–∏–≤—à–µ–≥–æ
      const rolesToRemove = member.roles.cache.filter(r => r.id !== guild.id);
      await Promise.all([
        removeRoles(member, rolesToRemove),
        checkBot(member),
        quarantine(member, rolesToRemove, action),
        dm(member, action)
      ]);

      console.log(`üö® ${executor.tag} –Ω–∞–∫–∞–∑–∞–Ω –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏.`);
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ roleDelete:', err);
    }
  });
};